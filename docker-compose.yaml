services:
  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - '6379'

  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - '5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER', ]
      interval: 5m
      retries: 2
      timeout: 10s

  app:
    build: .
    tty: true
    ports:
      - '8000:8000'
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A DRF worker -l INFO -P eventlet
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A DRF beat -l INFO -S django
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

volumes:
  pg_data:
